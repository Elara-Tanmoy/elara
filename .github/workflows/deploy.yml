name: Deploy Elara API

on:
  push:
    branches: [develop, main]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: elara-api-dev
  RESOURCE_GROUP: rg-elara-dev
  NODE_VERSION: '18'

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: api/package-lock.json
      
      - name: Install dependencies
        run: |
          cd api
          npm ci --omit=dev
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Restart staging slot
        run: |
          az webapp restart --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AZURE_WEBAPP_NAME }} --slot staging
          sleep 30
      
      - name: Deploy to staging
        run: |
          cd api
          zip -r ../staging-deploy.zip . -x "node_modules/.cache/*" "*.log" "*.zip"
          az webapp deploy \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --slot staging \
            --src-path ../staging-deploy.zip \
            --type zip \
            --restart true \
            --clean true
      
      - name: Wait for staging startup
        run: sleep 60
      
      - name: Test staging with retries
        run: |
          for i in {1..5}; do
            if curl -f https://elara-api-dev-staging.azurewebsites.net/health; then
              echo "Staging deployment successful!"
              exit 0
            fi
            echo "Attempt $i failed, waiting..."
            sleep 30
          done
          echo "Staging deployment failed after 5 attempts"
          exit 1

  deploy-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: api/package-lock.json
      
      - name: Install dependencies
        run: |
          cd api
          npm ci --omit=dev
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy and swap to production
        run: |
          cd api
          zip -r ../prod-deploy.zip . -x "node_modules/.cache/*" "*.log" "*.zip"
          az webapp deploy \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --slot staging \
            --src-path ../prod-deploy.zip \
            --type zip \
            --restart true \
            --clean true
          
          sleep 60
          
          # Test staging before swap
          if curl -f https://elara-api-dev-staging.azurewebsites.net/health; then
            # Swap to production
            az webapp deployment slot swap \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --name ${{ env.AZURE_WEBAPP_NAME }} \
              --slot staging
            
            sleep 30
            curl -f https://elara-api-dev.azurewebsites.net/health
          else
            echo "Staging test failed, aborting production swap"
            exit 1
          fi
